name: Build, Push to ECR, and Deploy to App Runner

on:
  pull_request:
    branches: [main]

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
  APP_RUNNER_SERVICE_ARN: ${{ secrets.APP_RUNNER_SERVICE_ARN }}

jobs:
  deploy:
    name: Build and Deploy to App Runner
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Generate image tag
      id: vars
      run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY_URI:$IMAGE_TAG .

    - name: Push Docker image to ECR
      run: |
        docker push $ECR_REPOSITORY_URI:$IMAGE_TAG

    - name: Deploy to AWS App Runner with ENV
      run: |
        aws apprunner update-service \
          --service-arn "$APP_RUNNER_SERVICE_ARN" \
          --source-configuration '{
            "ImageRepository": {
              "ImageIdentifier": "'"$ECR_REPOSITORY_URI:$IMAGE_TAG"'",
              "ImageRepositoryType": "ECR"
            },
            "AutoDeploymentsEnabled": true,
            "AuthenticationConfiguration": {}
          }' \
          --environment-variables \
            Name=OPENAI_API_KEY,Value=${{ secrets.OPENAI_API_KEY }} \
            Name=VECTOR_STORE_ID,Value=${{ secrets.VECTOR_STORE_ID }} \
            Name=ASSISTANT_ID,Value=${{ secrets.ASSISTANT_ID }} \
            Name=APP_ID,Value=${{ secrets.APP_ID }} \
            Name=PROMPT,Value=${{ secrets.PROMPT }}
